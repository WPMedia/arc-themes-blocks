name: Publish to themes target tag based off of themes branch name
on:
  push:
    branches:
      # only run on branch names that match:
      # arc-themes-release-version-{numbers}.{numbers} per product
      - arc-themes-release-version-[0-9]+\.[0-9]+
      # arc-themes-release-version-{numbers}.{numbers}.{numbers} per product
      - arc-themes-release-version-[0-9]+\.[0-9]+\.[0-9]+
    # only run on changes to these files
    paths:
      - "**.js"
      - "**.json"
      - "**.jsx"
      - "**.scss"
      - "**/intl.json"
      - "**/README.md"

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      SYNCED_RELEASE_TAG: ${{ github.ref_name }} # targets branch name ref_name
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # pulls all tags (needed for lerna / semantic release to correctly version)
      - name: Pull tags to give lerna access to git info
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Create npmrc for install
        env:
          ARCXP_AUTH_TOKEN: ${{ secrets.WPMEDIA_PUBLIC_REPO_ARCXP_PACKAGE_TOKEN }}
        run: |
          touch .npmrc
          echo @wpmedia:registry=https://npm.pkg.github.com/ >> .npmrc
          echo @arcxp:registry=https://npm.pkg.github.com/ >> .npmrc
          echo //npm.pkg.github.com/:_authToken=$ARCXP_AUTH_TOKEN >> .npmrc

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Clean install (CI) dependencies if lockfile (above) changed
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run all tests
        run: npm run test

      - name: Create npmrc for publish
        env:
          REPO_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rm .npmrc
          touch .npmrc
          echo @wpmedia:registry=https://npm.pkg.github.com/ >> .npmrc
          echo //npm.pkg.github.com/:_authToken=$REPO_AUTH_TOKEN >> .npmrc

      # See confluence pages https://arcpublishing.atlassian.net/wiki/spaces/TI/pages/2983788608/How+To+Do+Product-Facing+Tag+Release and https://arcpublishing.atlassian.net/wiki/spaces/TI/pages/3013541978/Github+Actions+for+NodeJS+Standards+Best+Practices for documentation
      - name: Publish to target tag based off of branch name
        run: |
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --local user.name "$GITHUB_ACTOR"
          npx lerna publish --dist-tag ${{ env.SYNCED_RELEASE_TAG }} --canary --preid ${{ env.SYNCED_RELEASE_TAG }} -y
